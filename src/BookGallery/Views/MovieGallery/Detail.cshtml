@model MovieGallery.Models.MovieDetailsItem
@using MovieGallery.Data
@using MovieGallery.Models.Helpers
@{
    /**/

    ViewBag.ShowBackBar = true;
    var noImageUrl = Url.Content("~/images") + "/noimage.jpg";
}



<div class="row">

    <div class="col-md-3 ">
       
        <div class="image-poster-container">
            <img src="http://image.tmdb.org/t/p/w185/@Model.poster_path"
                 alt="@Model.title" class="img-responsive" />
            <h3>@Model.title</h3>
            <h5><label>Theater date:&nbsp;</label>@(Model.release_date)</h5>
            <h5><label>Blu-ray release date:&nbsp;</label>@(Model.bluerayrelease)</h5>
            <h5><i class="fa fa-star fa-lg"></i><label>&nbsp;</label>@Model.vote_average <a href="http://www.imdb.com/title/@Model.imdb_id" alt="IMDB" target="_blank">(IMDB)</a></h5>
            <h5><label>Genre:&nbsp;</label>@String.Join(", ", Model.genres.MapGengresToString(new MovieGalleryRepository()))</h5>
            <h5><label>Language:&nbsp;</label> @Model.original_language</h5>
            <h5><label>Status:&nbsp;</label>@Html.Raw(Model.status)</h5>
            <h5>Languages:</h5>
            <div>
                @*@Model.popularity*@
                <ul>
                    @foreach (var spokenLanguage in Model.spoken_languages)
                    {
                        <li>@spokenLanguage.name</li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="col-md-9">
        <div class="video-content">
            <iframe class="fitvids" src="https://www.youtube.com/embed/@(Model.Trailers.results.FirstOrDefault()?.key)" allowfullscreen></iframe>
        </div>
    </div>
</div>
<br />
<div class="col-md-12">
    <div class="row">
        <div class="well">
            <h3>Description:</h3>
            <div>@Html.Raw(Model.overview)</div>
            <h3><label>Starring:</label></h3>
            <div class="clearfix">
                <div class="flex2-container">
                    @foreach (var item in Model.Credits.cast.Take(6))
                    {<div class="flex2-item">
                            <a href=@Url.Action("LookUpActor","MovieGallery", new {actorToSearchFor = item.name})>
                                <div class="image-padding">
                                    <img style="width: 40%; margin-bottom: 10px;" src=@($"http://image.tmdb.org/t/p/w185/{item.profile_path}") onerror="this.onerror=null; this.src='@noImageUrl'">
                                    <p>@item.name</p>
                                    <p style="color: #0a5d00; font-weight: bold;">As @item.character</p>
                                </div>
                            </a>
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>
    <div>
    </div>

</div>
